{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\doubl\\\\Documents\\\\Projets\\\\Try\\\\rocketbuilder\\\\frontend\\\\src\\\\components\\\\controls\\\\FromOrbit.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { ShipContext } from '../../contexts/ShipProvider';\nexport default class FromOrbit extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      celestBodies: null\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const celestBodyRes = await axios({\n        method: 'GET',\n        url: `http://localhost:1337/celest-bodies/`\n      });\n      const fetchedCelestBody = celestBodyRes.data;\n      this.setState({\n        celestBodies: fetchedCelestBody\n      });\n      console.log('fetchedCelestBody', fetchedCelestBody);\n    } catch (e) {\n      alert(e);\n    }\n  }\n\n  render() {\n    if (this.state.celestBodies === null) {\n      return 'loading';\n    } else return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      // hasGround={this.hasGround}\n      onClick: () => this.props.fromOrbitToSurface(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 21\n      }\n    }, \"land on ground\"), /*#__PURE__*/React.createElement(\"button\", {\n      // isPlanet={this.hasChild}\n      onClick: () => this.props.escapeFromOrbit(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }\n    }, \"escape gravity\"), /*#__PURE__*/React.createElement(\"button\", {\n      // hasChild={this.hasChild}\n      onClick: () => this.props.childTransfer(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }\n    }, \"tranfert to child\"), /*#__PURE__*/React.createElement(\"button\", {\n      //  hasParachute={this.hasParachute && hasAtmospher}\n      onClick: () => this.props.commandModuleReEntry(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }\n    }, \"Make a re-entry burn and land the capsule\"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 25\n      }\n    }, this.state.celestBodies.map((e, i) => {\n      if (e.type === 'planet') {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          key: i,\n          value: e,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 41\n          }\n        }, \" \", e.name, \"  \");\n      } else {\n        return '';\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.props.planetTransfert(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 25\n      }\n    }, \" tranfert \")));\n  }\n\n}\nFromOrbit.contextType = ShipContext;","map":{"version":3,"sources":["C:/Users/doubl/Documents/Projets/Try/rocketbuilder/frontend/src/components/controls/FromOrbit.js"],"names":["React","Component","axios","ShipContext","FromOrbit","state","celestBodies","componentDidMount","celestBodyRes","method","url","fetchedCelestBody","data","setState","console","log","e","alert","render","props","fromOrbitToSurface","escapeFromOrbit","childTransfer","commandModuleReEntry","map","i","type","name","planetTransfert","contextType"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,6BAA5B;AAEA,eAAe,MAAMC,SAAN,SAAwBH,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC7CI,KAD6C,GACrC;AACJC,MAAAA,YAAY,EAAE;AADV,KADqC;AAAA;;AAK7C,QAAMC,iBAAN,GAA0B;AACtB,QAAI;AACA,YAAMC,aAAa,GAAG,MAAMN,KAAK,CAAC;AAC9BO,QAAAA,MAAM,EAAE,KADsB;AAE9BC,QAAAA,GAAG,EAAG;AAFwB,OAAD,CAAjC;AAIA,YAAMC,iBAAiB,GAAGH,aAAa,CAACI,IAAxC;AACA,WAAKC,QAAL,CAAc;AAAEP,QAAAA,YAAY,EAAEK;AAAhB,OAAd;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCJ,iBAAjC;AACH,KARD,CAQE,OAAOK,CAAP,EAAU;AACRC,MAAAA,KAAK,CAACD,CAAD,CAAL;AACH;AACJ;;AAEDE,EAAAA,MAAM,GAAG;AACL,QAAI,KAAKb,KAAL,CAAWC,YAAX,KAA4B,IAAhC,EAAsC;AAClC,aAAO,SAAP;AACH,KAFD,MAGI,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI;AACA,MAAA,OAAO,EAAE,MAAM,KAAKa,KAAL,CAAWC,kBAAX,EAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAMI;AACI;AACA,MAAA,OAAO,EAAE,MAAM,KAAKD,KAAL,CAAWE,eAAX,EAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANJ,eAWI;AACI;AACA,MAAA,OAAO,EAAE,MAAM,KAAKF,KAAL,CAAWG,aAAX,EAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAXJ,eAgBI;AACI;AACA,MAAA,OAAO,EAAE,MAAM,KAAKH,KAAL,CAAWI,oBAAX,EAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAhBJ,eAqBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKlB,KAAL,CAAWC,YAAX,CAAwBkB,GAAxB,CAA4B,CAACR,CAAD,EAAIS,CAAJ,KAAU;AACnC,UAAIT,CAAC,CAACU,IAAF,KAAW,QAAf,EAAyB;AACrB,4BACI;AAAQ,UAAA,GAAG,EAAED,CAAb;AAAgB,UAAA,KAAK,EAAET,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA6BA,CAAC,CAACW,IAA/B,OADJ;AAGH,OAJD,MAIO;AACH,eAAO,EAAP;AACH;AACJ,KARA,CADL,CADJ,eAaI;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKR,KAAL,CAAWS,eAAX,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbJ,CArBJ,CADJ;AAuCP;;AA9D4C;AAiEjDxB,SAAS,CAACyB,WAAV,GAAwB1B,WAAxB","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { ShipContext } from '../../contexts/ShipProvider'\r\n\r\nexport default class FromOrbit extends Component {\r\n    state = {\r\n        celestBodies: null\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const celestBodyRes = await axios({\r\n                method: 'GET',\r\n                url: `http://localhost:1337/celest-bodies/`\r\n            })\r\n            const fetchedCelestBody = celestBodyRes.data\r\n            this.setState({ celestBodies: fetchedCelestBody })\r\n            console.log('fetchedCelestBody', fetchedCelestBody);\r\n        } catch (e) {\r\n            alert(e)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        if (this.state.celestBodies === null) {\r\n            return 'loading'\r\n        } else\r\n            return (\r\n                <div>\r\n                    <button\r\n                        // hasGround={this.hasGround}\r\n                        onClick={() => this.props.fromOrbitToSurface()}>\r\n                        land on ground\r\n            </button>\r\n                    <button\r\n                        // isPlanet={this.hasChild}\r\n                        onClick={() => this.props.escapeFromOrbit()}>\r\n                        escape gravity\r\n        </button>\r\n                    <button\r\n                        // hasChild={this.hasChild}\r\n                        onClick={() => this.props.childTransfer()}>\r\n                        tranfert to child\r\n        </button>\r\n                    <button\r\n                        //  hasParachute={this.hasParachute && hasAtmospher}\r\n                        onClick={() => this.props.commandModuleReEntry()}>\r\n                        Make a re-entry burn and land the capsule\r\n        </button>\r\n                    <form>\r\n                        <select>\r\n                            {this.state.celestBodies.map((e, i) => {\r\n                                if (e.type === 'planet') {\r\n                                    return (\r\n                                        <option key={i} value={e} > {e.name}  </option>\r\n                                    )\r\n                                } else {\r\n                                    return ''\r\n                                }\r\n                            }\r\n                            )}\r\n                        </select>\r\n                        <button onClick={() => this.props.planetTransfert()}> tranfert </button>\r\n                    </form>\r\n                </div>\r\n            );\r\n    }\r\n}\r\n\r\nFromOrbit.contextType = ShipContext;\r\n"]},"metadata":{},"sourceType":"module"}