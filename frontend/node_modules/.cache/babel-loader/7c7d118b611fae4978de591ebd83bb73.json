{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\doubl\\\\Documents\\\\Projets\\\\Try\\\\rocketbuilder\\\\frontend\\\\src\\\\components\\\\controls\\\\FromOrbit.js\";\nimport React, { useState } from 'react';\n\nconst FromOrbit = props => {\n  const [celestBody, setCelestBody] = useState();\n\n  const handleChange = event => {\n    setCelestBody(event.target.value);\n  };\n\n  if (props.celestBodiesList) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      // hasGround={props.hasGround}\n      onClick: () => props.fromOrbitToSurface(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }\n    }, \"land on ground\"), /*#__PURE__*/React.createElement(\"button\", {\n      // isPlanet={props.hasChild}\n      onClick: () => props.escapeFromOrbit(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }\n    }, \"escape gravity\"), /*#__PURE__*/React.createElement(\"button\", {\n      // hasChild={props.hasChild}\n      onClick: () => props.childTransfer(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }\n    }, \"tranfert to child\"), /*#__PURE__*/React.createElement(\"button\", {\n      //  hasParachute={props.hasParachute && hasAtmospher}\n      onClick: () => props.commandModuleReEntry(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }\n    }, \"Make a re-entry burn and land the capsule\"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      value: celestBody,\n      onChange: e => handleChange(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }\n    }, props.celestBodiesList.map((e, i) => {\n      if (e.type === 'planet') {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          key: i,\n          value: e,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 37\n          }\n        }, \" \", e.name, \"  \");\n      } else {\n        return '';\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => props.planetTransfert(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }\n    }, \" tranfert \")));\n  }\n\n  ;\n};\n\nexport default FromOrbit;","map":{"version":3,"sources":["C:/Users/doubl/Documents/Projets/Try/rocketbuilder/frontend/src/components/controls/FromOrbit.js"],"names":["React","useState","FromOrbit","props","celestBody","setCelestBody","handleChange","event","target","value","celestBodiesList","fromOrbitToSurface","escapeFromOrbit","childTransfer","commandModuleReEntry","e","map","i","type","name","planetTransfert"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;AAEA,MAAMC,SAAS,GAAIC,KAAD,IAAW;AACzB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BJ,QAAQ,EAA5C;;AAEA,QAAMK,YAAY,GAAIC,KAAD,IAAW;AAC5BF,IAAAA,aAAa,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAb;AACH,GAFD;;AAIA,MAAIN,KAAK,CAACO,gBAAV,EAA4B;AACxB,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AACI;AACA,MAAA,OAAO,EAAE,MAAMP,KAAK,CAACQ,kBAAN,EAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAMI;AACI;AACA,MAAA,OAAO,EAAE,MAAMR,KAAK,CAACS,eAAN,EAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANJ,eAWI;AACI;AACA,MAAA,OAAO,EAAE,MAAMT,KAAK,CAACU,aAAN,EAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAXJ,eAgBI;AACI;AACA,MAAA,OAAO,EAAE,MAAMV,KAAK,CAACW,oBAAN,EAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAhBJ,eAqBI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,KAAK,EAAEV,UAAf;AAA2B,MAAA,QAAQ,EAAGW,CAAD,IAAKT,YAAY,CAACS,CAAD,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACKZ,KAAK,CAACO,gBAAN,CAAuBM,GAAvB,CAA2B,CAACD,CAAD,EAAIE,CAAJ,KAAU;AAClC,UAAIF,CAAC,CAACG,IAAF,KAAW,QAAf,EAAyB;AACrB,4BACI;AAAQ,UAAA,GAAG,EAAED,CAAb;AAAgB,UAAA,KAAK,EAAEF,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA6BA,CAAC,CAACI,IAA/B,OADJ;AAGH,OAJD,MAIO;AACH,eAAO,EAAP;AACH;AACJ,KARA,CADL,CADJ,eAaI;AAAQ,MAAA,OAAO,EAAE,MAAMhB,KAAK,CAACiB,eAAN,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbJ,CArBJ,CADJ;AAuCH;;AAAA;AACJ,CAhDD;;AAkDA,eAAelB,SAAf","sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst FromOrbit = (props) => {\r\n    const [celestBody, setCelestBody] = useState();\r\n\r\n    const handleChange = (event) => {\r\n        setCelestBody(event.target.value);  \r\n    }\r\n\r\n    if (props.celestBodiesList) {\r\n        return (\r\n            <div>\r\n                <button\r\n                    // hasGround={props.hasGround}\r\n                    onClick={() => props.fromOrbitToSurface()}>\r\n                    land on ground\r\n                </button>\r\n                <button\r\n                    // isPlanet={props.hasChild}\r\n                    onClick={() => props.escapeFromOrbit()}>\r\n                    escape gravity\r\n            </button>\r\n                <button\r\n                    // hasChild={props.hasChild}\r\n                    onClick={() => props.childTransfer()}>\r\n                    tranfert to child\r\n            </button>\r\n                <button\r\n                    //  hasParachute={props.hasParachute && hasAtmospher}\r\n                    onClick={() => props.commandModuleReEntry()}>\r\n                    Make a re-entry burn and land the capsule\r\n            </button>\r\n                <form>\r\n                    <select value={celestBody} onChange={(e)=>handleChange(e)}>\r\n                        {props.celestBodiesList.map((e, i) => {\r\n                            if (e.type === 'planet') {\r\n                                return (\r\n                                    <option key={i} value={e} > {e.name}  </option>\r\n                                )\r\n                            } else {\r\n                                return ''\r\n                            }\r\n                        }\r\n                        )}\r\n                    </select>\r\n                    <button onClick={() => props.planetTransfert()}> tranfert </button>\r\n                </form>\r\n            </div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default FromOrbit;"]},"metadata":{},"sourceType":"module"}