{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\doubl\\\\Documents\\\\Projets\\\\Try\\\\rocketbuilder\\\\frontend\\\\src\\\\components\\\\controls\\\\ShipControl.js\";\nimport React, { Component } from 'react';\nimport { ShipContext } from '../../contexts/ShipProvider';\nimport axios from 'axios';\nexport default class ShipControl extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ship: null,\n      stage: null,\n      celestialBody: null\n    };\n\n    this.fromSurfaceToOrbit = () => {\n      let stage = this.context.state.stage;\n      let requierdDV = Math.sqrt(this.state.ship.celest_body.mu / this.state.ship.celest_body.radius) * 1000 * this.state.ship.celest_body.atmosphere;\n      let dvByStageAfterBurn = [...this.context.state.deltaVByStage];\n      let dvbystage = [...this.context.state.deltaVByStage];\n      let dif = []; // Minus deltaV\n\n      for (let i = 0; i < dvByStageAfterBurn.length; i++) {\n        if (dvByStageAfterBurn[i] > requierdDV) {\n          dvByStageAfterBurn[i] -= requierdDV;\n          requierdDV = 0;\n        } else {\n          requierdDV -= dvByStageAfterBurn[i];\n          dvByStageAfterBurn[i] = 0;\n        }\n      }\n\n      console.log('dvbystage', dvbystage);\n      console.log('dvByStageAfterBurn', dvByStageAfterBurn); // getDv diference\n\n      for (let i = 0; i < dvbystage.length; i++) {\n        // dif.push(((dvByStageAfterBurn[i] - dvbystage[i]) / ((dvByStageAfterBurn[i] + dvbystage[i]) / 2)) * 100)\n        // dif.push( this.context.state.deltaVByStage[i] - dvByStageAfterBurn[i] )\n        dif.push(dvByStageAfterBurn * (dvbystage[i] / 100));\n      }\n\n      console.log('dif', dif); // updateFuelLastStage\n      // stage separation\n\n      for (let i = 0; i < dvByStageAfterBurn.length; i++) {\n        if (dvByStageAfterBurn[i] === 0) {\n          stage.splice(0, 1);\n        }\n      } //stage update\n\n    };\n  }\n\n  async componentDidMount() {\n    try {\n      const shiptRes = await axios({\n        method: 'GET',\n        url: `http://localhost:1337/ships/${this.props.location.id}`\n      });\n      const fetchedShip = shiptRes.data;\n      let rocketStages = [];\n\n      for (let i = 0; i < fetchedShip.stage.length; i++) {\n        let stage = {\n          commandModule: [],\n          engine: [],\n          tank: []\n        };\n        let currentStage = i;\n\n        for (let i = 0; i < fetchedShip.stage[currentStage].tank.length; i++) {\n          stage.tank.push(fetchedShip.stage[currentStage].tank[i].tank);\n        }\n\n        for (let i = 0; i < fetchedShip.stage[currentStage].engine.length; i++) {\n          stage.engine.push(fetchedShip.stage[currentStage].engine[i].engine);\n        }\n\n        for (let i = 0; i < fetchedShip.stage[currentStage].commandModule.length; i++) {\n          stage.commandModule.push(fetchedShip.stage[currentStage].commandModule[i].commandModule);\n        }\n\n        currentStage++;\n        rocketStages.push(stage);\n      }\n\n      console.log('rocketStages', rocketStages);\n      this.setState({\n        stage: rocketStages,\n        ship: fetchedShip\n      }, () => {\n        this.context.shipSetStage(rocketStages);\n      });\n      console.log('fetchedShip', fetchedShip);\n    } catch (err) {\n      alert(err);\n    }\n\n    console.log(this.state.ship, this.state.stage);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shipControl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.fromSurfaceToOrbit(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, \"go to orbit :\"));\n  }\n\n}\nShipControl.contextType = ShipContext;","map":{"version":3,"sources":["C:/Users/doubl/Documents/Projets/Try/rocketbuilder/frontend/src/components/controls/ShipControl.js"],"names":["React","Component","ShipContext","axios","ShipControl","state","ship","stage","celestialBody","fromSurfaceToOrbit","context","requierdDV","Math","sqrt","celest_body","mu","radius","atmosphere","dvByStageAfterBurn","deltaVByStage","dvbystage","dif","i","length","console","log","push","splice","componentDidMount","shiptRes","method","url","props","location","id","fetchedShip","data","rocketStages","commandModule","engine","tank","currentStage","setState","shipSetStage","err","alert","render","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { ShipContext } from '../../contexts/ShipProvider'\r\nimport axios from 'axios';\r\n\r\n\r\nexport default class ShipControl extends Component {\r\n    state ={\r\n        ship: null,\r\n        stage: null,\r\n        celestialBody: null\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const shiptRes = await axios({\r\n                method: 'GET',\r\n                url: `http://localhost:1337/ships/${this.props.location.id}`\r\n            });\r\n            const fetchedShip = shiptRes.data\r\n            let rocketStages = []\r\n            for (let i = 0; i < fetchedShip.stage.length; i++) {\r\n                let stage = {\r\n                    commandModule: [],\r\n                    engine: [],\r\n                    tank: [],\r\n                }\r\n                let currentStage = i\r\n                for (let i = 0; i < fetchedShip.stage[currentStage].tank.length; i++) {\r\n                    stage.tank.push(fetchedShip.stage[currentStage].tank[i].tank)\r\n                }\r\n                for (let i = 0; i < fetchedShip.stage[currentStage].engine.length; i++) {\r\n                    stage.engine.push(fetchedShip.stage[currentStage].engine[i].engine)\r\n                }\r\n                for (let i = 0; i < fetchedShip.stage[currentStage].commandModule.length; i++) {\r\n                    stage.commandModule.push(fetchedShip.stage[currentStage].commandModule[i].commandModule)\r\n                }\r\n                currentStage++\r\n                rocketStages.push(stage)\r\n            }\r\n            console.log('rocketStages', rocketStages);\r\n            this.setState({ \r\n                stage: rocketStages,\r\n                ship: fetchedShip\r\n            }, () => {\r\n                this.context.shipSetStage(rocketStages)\r\n            })\r\n            console.log('fetchedShip', fetchedShip)\r\n        } catch (err){\r\n            alert(err);\r\n        }\r\n        console.log(this.state.ship, this.state.stage);\r\n    }\r\n\r\n    fromSurfaceToOrbit = () => {\r\n        let stage = this.context.state.stage\r\n        let requierdDV = Math.sqrt(this.state.ship.celest_body.mu/this.state.ship.celest_body.radius) * 1000 * this.state.ship.celest_body.atmosphere\r\n        let dvByStageAfterBurn = [...this.context.state.deltaVByStage]\r\n        let dvbystage = [...this.context.state.deltaVByStage]\r\n        let dif = []\r\n\r\n        // Minus deltaV\r\n        for(let i = 0; i < dvByStageAfterBurn.length; i++ ){\r\n            if(dvByStageAfterBurn[i] > requierdDV){\r\n                dvByStageAfterBurn[i] -= requierdDV\r\n                requierdDV = 0\r\n            } else{\r\n                requierdDV -= dvByStageAfterBurn[i]\r\n                dvByStageAfterBurn[i] = 0\r\n            }\r\n        }\r\n\r\n        console.log('dvbystage', dvbystage);\r\n        console.log('dvByStageAfterBurn', dvByStageAfterBurn);\r\n\r\n        // getDv diference\r\n        for(let i = 0; i< dvbystage.length; i++){\r\n            // dif.push(((dvByStageAfterBurn[i] - dvbystage[i]) / ((dvByStageAfterBurn[i] + dvbystage[i]) / 2)) * 100)\r\n            // dif.push( this.context.state.deltaVByStage[i] - dvByStageAfterBurn[i] )\r\n            dif.push( dvByStageAfterBurn * (dvbystage[i] / 100) )\r\n        }\r\n        console.log('dif' , dif);\r\n        \r\n        // updateFuelLastStage\r\n\r\n\r\n\r\n        // stage separation\r\n        for(let i = 0; i < dvByStageAfterBurn.length; i++){  \r\n            if(dvByStageAfterBurn[i] === 0){\r\n                stage.splice(0,1)\r\n            }\r\n        }\r\n\r\n        //stage update\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"shipControl\">\r\n                <button onClick={() => this.fromSurfaceToOrbit()}>go to orbit :</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nShipControl.contextType = ShipContext;\r\n"]},"metadata":{},"sourceType":"module"}