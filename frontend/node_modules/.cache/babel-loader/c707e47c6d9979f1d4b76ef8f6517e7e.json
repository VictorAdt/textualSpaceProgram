{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\doubl\\\\Documents\\\\Projets\\\\Try\\\\rocketbuilder\\\\frontend\\\\src\\\\components\\\\controls\\\\ShipControl.js\";\nimport React, { Component } from 'react';\nimport { ShipContext } from '../../contexts/ShipProvider';\nimport axios from 'axios';\nimport { updateShip } from './../../utils/saveShip';\nexport default class ShipControl extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ship: null,\n      stage: null,\n      celestialBody: null\n    };\n\n    this.fromSurfaceToOrbit = () => {\n      let stage = this.context.state.stage;\n      let requierdDV = Math.sqrt(this.state.ship.celest_body.mu / this.state.ship.celest_body.radius) * 1000 * this.state.ship.celest_body.atmosphere;\n      let dvByStageAfterBurn = [...this.context.state.deltaVByStage];\n      let dvbystage = [...this.context.state.deltaVByStage];\n      let dif = [];\n      console.log('reqDV', requierdDV); // Minus deltaV\n\n      for (let i = 0; i < dvByStageAfterBurn.length; i++) {\n        if (dvByStageAfterBurn[i] > requierdDV) {\n          dvByStageAfterBurn[i] -= requierdDV;\n          requierdDV = 0;\n          console.log('Congratulation, you reach orbit');\n        } else {\n          requierdDV -= dvByStageAfterBurn[i];\n          dvByStageAfterBurn[i] = 0;\n        }\n      }\n\n      if (requierdDV !== 0) {\n        console.log('you failed');\n        return;\n      }\n\n      console.log('dvbystage', dvbystage);\n      console.log('dvByStageAfterBurn', dvByStageAfterBurn); // stage separation\n\n      for (let i = 0; i < dvByStageAfterBurn.length; i++) {\n        if (dvByStageAfterBurn[i] === 0) {\n          stage.splice(0, 1);\n          dvByStageAfterBurn.splice(0, 1);\n          dvbystage.splice(0, 1);\n        }\n      } // getDv % diference\n\n\n      for (let i = 0; i < dvbystage.length; i++) {\n        dif.push(dvByStageAfterBurn[i] / (dvbystage[i] / 100));\n      }\n\n      console.log('dif', dif); // updateFuelLastStage\n\n      for (let i = 0; i < stage[0].tank.length; i++) {\n        stage[0].tank[i].remainingFuel = stage[0].tank[i].remainingFuel / 100 * dif[0] / 1.5;\n      } //stage update\n\n\n      this.context.shipSetStage(stage);\n      this.context.updateLocation('orbit');\n      updateShip(stage, this.state.ship.name, 'orbit', this.state.ship.celest_body.id, this.state.ship.id);\n      console.log(this.context.state.stage);\n    };\n  }\n\n  async componentDidMount() {\n    if (this.props.location.id) {\n      try {\n        const shiptRes = await axios({\n          method: 'GET',\n          url: `http://localhost:1337/ships/${this.props.location.id}`\n        });\n        const fetchedShip = shiptRes.data;\n        let rocketStages = []; // format data for the context\n\n        for (let i = 0; i < fetchedShip.stage.length; i++) {\n          let stage = {\n            commandModule: [],\n            engine: [],\n            tank: []\n          };\n          let currentStage = i;\n\n          for (let i = 0; i < fetchedShip.stage[currentStage].tank.length; i++) {\n            let tankList = [];\n            tankList.push(fetchedShip.stage[currentStage].tank[i].tank);\n            tankList.push(fetchedShip.stage[currentStage].tank[i].remainingFuel);\n          }\n\n          for (let i = 0; i < fetchedShip.stage[currentStage].engine.length; i++) {\n            stage.engine.push(fetchedShip.stage[currentStage].engine[i].engine);\n          }\n\n          for (let i = 0; i < fetchedShip.stage[currentStage].commandModule.length; i++) {\n            stage.commandModule.push(fetchedShip.stage[currentStage].commandModule[i].commandModule);\n          }\n\n          currentStage++;\n          rocketStages.push(stage);\n        }\n\n        console.log('rocketStages', rocketStages);\n        this.setState({\n          stage: rocketStages,\n          ship: fetchedShip\n        }, () => {\n          this.context.shipSetStage(rocketStages);\n        });\n        console.log('fetchedShip', fetchedShip); // Catch error\n      } catch (err) {\n        alert(err);\n      }\n\n      console.log(this.state.ship, this.state.stage);\n    } else {// redirect to home\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shipControl\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.fromSurfaceToOrbit(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }, \"go to orbit :\"));\n  }\n\n}\nShipControl.contextType = ShipContext;","map":{"version":3,"sources":["C:/Users/doubl/Documents/Projets/Try/rocketbuilder/frontend/src/components/controls/ShipControl.js"],"names":["React","Component","ShipContext","axios","updateShip","ShipControl","state","ship","stage","celestialBody","fromSurfaceToOrbit","context","requierdDV","Math","sqrt","celest_body","mu","radius","atmosphere","dvByStageAfterBurn","deltaVByStage","dvbystage","dif","console","log","i","length","splice","push","tank","remainingFuel","shipSetStage","updateLocation","name","id","componentDidMount","props","location","shiptRes","method","url","fetchedShip","data","rocketStages","commandModule","engine","currentStage","tankList","setState","err","alert","render","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { ShipContext } from '../../contexts/ShipProvider'\r\nimport axios from 'axios';\r\nimport {updateShip} from './../../utils/saveShip'\r\n\r\nexport default class ShipControl extends Component {\r\n    state = {\r\n        ship: null,\r\n        stage: null,\r\n        celestialBody: null\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (this.props.location.id) {\r\n            try {\r\n                const shiptRes = await axios({\r\n                    method: 'GET',\r\n                    url: `http://localhost:1337/ships/${this.props.location.id}`\r\n                });\r\n                const fetchedShip = shiptRes.data\r\n                let rocketStages = []\r\n                // format data for the context\r\n                for (let i = 0; i < fetchedShip.stage.length; i++) {\r\n                    let stage = {\r\n                        commandModule: [],\r\n                        engine: [],\r\n                        tank: [],\r\n                    }\r\n                    let currentStage = i\r\n                    for (let i = 0; i < fetchedShip.stage[currentStage].tank.length; i++) {\r\n                        let tankList = []\r\n                        tankList.push(fetchedShip.stage[currentStage].tank[i].tank)\r\n                        tankList.push(fetchedShip.stage[currentStage].tank[i].remainingFuel)\r\n                    }\r\n                    for (let i = 0; i < fetchedShip.stage[currentStage].engine.length; i++) {\r\n                        stage.engine.push(fetchedShip.stage[currentStage].engine[i].engine)\r\n                    }\r\n                    for (let i = 0; i < fetchedShip.stage[currentStage].commandModule.length; i++) {\r\n                        stage.commandModule.push(fetchedShip.stage[currentStage].commandModule[i].commandModule)\r\n                    }\r\n                    currentStage++\r\n                    rocketStages.push(stage)\r\n                }\r\n                console.log('rocketStages', rocketStages);\r\n                this.setState({\r\n                    stage: rocketStages,\r\n                    ship: fetchedShip\r\n                }, () => {\r\n                    this.context.shipSetStage(rocketStages)\r\n                })\r\n                console.log('fetchedShip', fetchedShip)\r\n            // Catch error\r\n            } catch (err) {\r\n                alert(err);\r\n            }\r\n            console.log(this.state.ship, this.state.stage)\r\n        } else {\r\n            // redirect to home\r\n        }\r\n    }\r\n\r\n    fromSurfaceToOrbit = () => {\r\n        let stage = this.context.state.stage\r\n        let requierdDV = Math.sqrt(this.state.ship.celest_body.mu / this.state.ship.celest_body.radius) * 1000 * this.state.ship.celest_body.atmosphere\r\n        let dvByStageAfterBurn = [...this.context.state.deltaVByStage]\r\n        let dvbystage = [...this.context.state.deltaVByStage]\r\n        let dif = []\r\n        console.log('reqDV', requierdDV);\r\n        // Minus deltaV\r\n        for (let i = 0; i < dvByStageAfterBurn.length; i++) {\r\n            if (dvByStageAfterBurn[i] > requierdDV) {\r\n                dvByStageAfterBurn[i] -= requierdDV\r\n                requierdDV = 0\r\n                console.log('Congratulation, you reach orbit')\r\n            } else {\r\n                requierdDV -= dvByStageAfterBurn[i]\r\n                dvByStageAfterBurn[i] = 0\r\n            }\r\n        }\r\n        if (requierdDV !== 0) {\r\n            console.log('you failed')\r\n            return\r\n        }\r\n        console.log('dvbystage', dvbystage);\r\n        console.log('dvByStageAfterBurn', dvByStageAfterBurn);\r\n        // stage separation\r\n        for (let i = 0; i < dvByStageAfterBurn.length; i++) {\r\n            if (dvByStageAfterBurn[i] === 0) {\r\n                stage.splice(0, 1)\r\n                dvByStageAfterBurn.splice(0, 1)\r\n                dvbystage.splice(0, 1)\r\n            }\r\n        }\r\n        // getDv % diference\r\n        for (let i = 0; i < dvbystage.length; i++) {\r\n            dif.push(dvByStageAfterBurn[i] / (dvbystage[i] / 100))\r\n        }\r\n        console.log('dif', dif);\r\n        // updateFuelLastStage\r\n        for (let i = 0; i < stage[0].tank.length; i++) {\r\n            stage[0].tank[i].remainingFuel = (stage[0].tank[i].remainingFuel / 100 * dif[0]) / 1.5\r\n        }\r\n        //stage update\r\n            this.context.shipSetStage(stage)\r\n            this.context.updateLocation('orbit')\r\n            updateShip(stage, this.state.ship.name , 'orbit' ,this.state.ship.celest_body.id, this.state.ship.id)\r\n            console.log(this.context.state.stage);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"shipControl\">\r\n                <button onClick={() => this.fromSurfaceToOrbit()}>go to orbit :</button>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nShipControl.contextType = ShipContext;\r\n"]},"metadata":{},"sourceType":"module"}