{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\doubl\\\\Documents\\\\Projets\\\\Try\\\\rocketbuilder\\\\frontend\\\\src\\\\components\\\\controls\\\\FromOrbit.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nexport default class FromOrbit extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      celestBodies: null\n    };\n  }\n\n  async componentDidMount() {\n    if (this.context.state.ship.celest_body) {\n      try {\n        const celestBodyRes = await axios({\n          method: 'GET',\n          url: `http://localhost:1337/celest-bodies/`\n        });\n        const fetchedCelestBody = celestBodyRes.data;\n        this.setState({\n          celestBodies: fetchedCelestBody\n        });\n        console.log('fetchedCelestBody', fetchedCelestBody);\n      } catch (e) {\n        alert(e);\n      }\n    }\n  }\n\n  render() {\n    while (this.state.celestBodies === null) {\n      return;\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      // hasGround={this.hasGround}\n      onClick: () => this.fromOrbitToSurface(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, \"land on ground\"), /*#__PURE__*/React.createElement(\"button\", {\n      // isPlanet={this.hasChild}\n      onClick: () => this.escapeFromOrbit(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }\n    }, \"escape gravity\"), /*#__PURE__*/React.createElement(\"button\", {\n      // hasChild={this.hasChild}\n      onClick: () => this.childTransfer(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }\n    }, \"tranfert to child\"), /*#__PURE__*/React.createElement(\"button\", {\n      //  hasParachute={this.hasParachute && hasAtmospher}\n      onClick: () => this.commandModuleReEntry(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }\n    }, \"Make a re-entry burn and land the capsule\"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, this.state.celestBodies.map((e, i) => {\n      if (e.type === 'planet') {\n        return /*#__PURE__*/React.createElement(\"option\", {\n          key: i,\n          value: e,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 33\n          }\n        }, \" \", e.name, \"  \");\n      } else {\n        return '';\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.planetTransfert(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, \" tranfert \")));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/doubl/Documents/Projets/Try/rocketbuilder/frontend/src/components/controls/FromOrbit.js"],"names":["React","Component","axios","FromOrbit","state","celestBodies","componentDidMount","context","ship","celest_body","celestBodyRes","method","url","fetchedCelestBody","data","setState","console","log","e","alert","render","fromOrbitToSurface","escapeFromOrbit","childTransfer","commandModuleReEntry","map","i","type","name","planetTransfert"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,MAAMC,SAAN,SAAwBF,SAAxB,CAAkC;AAAA;AAAA;AAAA,SAC7CG,KAD6C,GACrC;AACJC,MAAAA,YAAY,EAAE;AADV,KADqC;AAAA;;AAK7C,QAAMC,iBAAN,GAA0B;AACtB,QAAI,KAAKC,OAAL,CAAaH,KAAb,CAAmBI,IAAnB,CAAwBC,WAA5B,EAAyC;AACrC,UAAI;AACA,cAAMC,aAAa,GAAG,MAAMR,KAAK,CAAC;AAC9BS,UAAAA,MAAM,EAAE,KADsB;AAE9BC,UAAAA,GAAG,EAAG;AAFwB,SAAD,CAAjC;AAIA,cAAMC,iBAAiB,GAAGH,aAAa,CAACI,IAAxC;AACA,aAAKC,QAAL,CAAc;AAAEV,UAAAA,YAAY,EAAEQ;AAAhB,SAAd;AACAG,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiCJ,iBAAjC;AACH,OARD,CAQE,OAAOK,CAAP,EAAU;AACRC,QAAAA,KAAK,CAACD,CAAD,CAAL;AACH;AACJ;AACJ;;AAEDE,EAAAA,MAAM,GAAG;AACL,WAAM,KAAKhB,KAAL,CAAWC,YAAX,KAA4B,IAAlC,EAAuC;AACnC;AACH;;AACD,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACA;AACI;AACA,MAAA,OAAO,EAAE,MAAM,KAAKgB,kBAAL,EAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADA,eAMA;AACI;AACA,MAAA,OAAO,EAAE,MAAM,KAAKC,eAAL,EAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBANA,eAWA;AACI;AACA,MAAA,OAAO,EAAE,MAAM,KAAKC,aAAL,EAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAXA,eAgBA;AACI;AACA,MAAA,OAAO,EAAE,MAAM,KAAKC,oBAAL,EAFnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mDAhBA,eAqBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKpB,KAAL,CAAWC,YAAX,CAAwBoB,GAAxB,CAA4B,CAACP,CAAD,EAAIQ,CAAJ,KAAU;AACnC,UAAIR,CAAC,CAACS,IAAF,KAAW,QAAf,EAAyB;AACrB,4BACI;AAAQ,UAAA,GAAG,EAAED,CAAb;AAAgB,UAAA,KAAK,EAAER,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAA6BA,CAAC,CAACU,IAA/B,OADJ;AAGH,OAJD,MAIO;AACH,eAAO,EAAP;AACH;AACJ,KARA,CADL,CADJ,eAaI;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKC,eAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbJ,CArBA,CADJ;AAuCH;;AAhE4C","sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport default class FromOrbit extends Component {\r\n    state = {\r\n        celestBodies: null\r\n    }\r\n\r\n    async componentDidMount() {\r\n        if (this.context.state.ship.celest_body) {\r\n            try {\r\n                const celestBodyRes = await axios({\r\n                    method: 'GET',\r\n                    url: `http://localhost:1337/celest-bodies/`\r\n                })\r\n                const fetchedCelestBody = celestBodyRes.data\r\n                this.setState({ celestBodies: fetchedCelestBody })\r\n                console.log('fetchedCelestBody', fetchedCelestBody);\r\n            } catch (e) {\r\n                alert(e)\r\n            }\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        while(this.state.celestBodies === null){\r\n            return\r\n        }\r\n        return (\r\n            <div>\r\n            <button\r\n                // hasGround={this.hasGround}\r\n                onClick={() => this.fromOrbitToSurface()}>\r\n                land on ground\r\n            </button>\r\n            <button\r\n                // isPlanet={this.hasChild}\r\n                onClick={() => this.escapeFromOrbit()}>\r\n                escape gravity\r\n        </button>\r\n            <button\r\n                // hasChild={this.hasChild}\r\n                onClick={() => this.childTransfer()}>\r\n                tranfert to child\r\n        </button>\r\n            <button\r\n                //  hasParachute={this.hasParachute && hasAtmospher}\r\n                onClick={() => this.commandModuleReEntry()}>\r\n                Make a re-entry burn and land the capsule\r\n        </button>\r\n            <form>\r\n                <select>\r\n                    {this.state.celestBodies.map((e, i) => {\r\n                        if (e.type === 'planet') {\r\n                            return (\r\n                                <option key={i} value={e} > {e.name}  </option>\r\n                            )\r\n                        } else {\r\n                            return ''\r\n                        }\r\n                    }\r\n                    )}\r\n                </select>\r\n                <button onClick={() => this.planetTransfert()}> tranfert </button>\r\n            </form>\r\n        </div>\r\n        );\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}