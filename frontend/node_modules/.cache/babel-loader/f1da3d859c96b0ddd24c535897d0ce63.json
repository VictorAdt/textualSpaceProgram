{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\doubl\\\\Documents\\\\Projets\\\\Try\\\\rocketbuilder\\\\frontend\\\\src\\\\components\\\\controls\\\\ManoeuvreControl.js\";\nimport React, { Component } from 'react';\nimport { ShipContext } from '../../contexts/ShipProvider';\nimport { updateShip } from '../../utils/updateShip';\nimport FromSurface from './FromSurface';\nimport FromOrbit from './FromOrbit';\nexport default class ManoeuvreControl extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.fromSurfaceToOrbit = () => {\n      let stage = this.context.state.stage;\n      let requierdDV = Math.sqrt(this.context.state.ship.celest_body.mu / this.context.state.ship.celest_body.radius) * 1000 * this.context.state.ship.celest_body.atmosphere;\n      let dvByStageAfterBurn = [...this.context.state.deltaVByStage];\n      let dvbystage = [...this.context.state.deltaVByStage];\n      let dif = [];\n      console.log('reqDV', requierdDV); // Minus deltaV\n\n      for (let i = 0; i < dvByStageAfterBurn.length; i++) {\n        if (dvByStageAfterBurn[i] > requierdDV) {\n          dvByStageAfterBurn[i] -= requierdDV;\n          requierdDV = 0;\n          console.log('Congratulation, you reach orbit');\n        } else {\n          requierdDV -= dvByStageAfterBurn[i];\n          dvByStageAfterBurn[i] = 0;\n        }\n      }\n\n      if (requierdDV !== 0) {\n        console.log('you failed');\n        return;\n      }\n\n      console.log('dvbystage', dvbystage);\n      console.log('dvByStageAfterBurn', dvByStageAfterBurn); // stage separation\n\n      for (let i = 0; i < dvByStageAfterBurn.length; i++) {\n        if (dvByStageAfterBurn[i] === 0) {\n          stage.splice(0, 1);\n          dvByStageAfterBurn.splice(0, 1);\n          dvbystage.splice(0, 1);\n        }\n      } // getDv % diference\n\n\n      for (let i = 0; i < dvbystage.length; i++) {\n        dif.push(dvByStageAfterBurn[i] / (dvbystage[i] / 100));\n      }\n\n      console.log('dif', dif); // updateFuelLastStage\n\n      for (let i = 0; i < stage[0].tank.length; i++) {\n        stage[0].tank[i].remainingFuel = Math.sqrt(stage[0].tank[i].remainingFuel / 100 * dif[0]) * 100;\n      } //stage update\n\n\n      this.context.shipSetStage(stage);\n      this.context.updateLocation('orbit');\n      updateShip(stage, this.context.state.ship.name, 'orbit', this.context.state.ship.celest_body.id, this.context.state.ship.id);\n      console.log('manoeuvre context ', this.context);\n    };\n\n    this.fromOrbitToSurface = () => {};\n\n    this.escapeFromOrbit = () => {};\n\n    this.childTransfer = () => {};\n\n    this.landShip = () => {\n      let stage = this.context.state.stage;\n      let requierdDV = Math.sqrt(this.context.state.ship.celest_body.mu / this.context.state.ship.celest_body.radius) * 1000 / this.context.state.ship.celest_body.atmosphere;\n      let dvByStageAfterBurn = [...this.context.state.deltaVByStage];\n      let dvbystage = [...this.context.state.deltaVByStage];\n      let dif = [];\n      console.log('reqDV', requierdDV); // Minus deltaV\n\n      for (let i = 0; i < dvByStageAfterBurn.length; i++) {\n        if (dvByStageAfterBurn[i] > requierdDV) {\n          dvByStageAfterBurn[i] -= requierdDV;\n          requierdDV = 0;\n          console.log('congratulation, you landed');\n        } else {\n          requierdDV -= dvByStageAfterBurn[i];\n          dvByStageAfterBurn[i] = 0;\n        }\n      }\n\n      if (requierdDV !== 0) {\n        console.log('you failed');\n        return;\n      }\n\n      console.log('dvbystage', dvbystage);\n      console.log('dvByStageAfterBurn', dvByStageAfterBurn); // stage separation\n\n      for (let i = 0; i < dvByStageAfterBurn.length; i++) {\n        if (dvByStageAfterBurn[i] === 0) {\n          stage.splice(0, 1);\n          dvByStageAfterBurn.splice(0, 1);\n          dvbystage.splice(0, 1);\n        }\n      } // getDv % diference\n\n\n      for (let i = 0; i < dvbystage.length; i++) {\n        dif.push(dvByStageAfterBurn[i] / (dvbystage[i] / 100));\n      }\n\n      console.log('dif', dif); // updateFuelLastStage\n\n      for (let i = 0; i < stage[0].tank.length; i++) {\n        stage[0].tank[i].remainingFuel = stage[0].tank[i].remainingFuel / 100 * dif[0] / 1.5;\n      } //stage update\n\n\n      this.context.shipSetStage(stage);\n      this.context.updateLocation('ground');\n      updateShip(stage, this.context.state.ship.name, 'ground', this.context.state.ship.celest_body.id, this.context.state.ship.id);\n      console.log('manoeuvre context ', this.context);\n    };\n\n    this.commandModuleReEntry = () => {};\n  }\n\n  async componentDidMount() {\n    /*try {\r\n        const celestBodyRes = await axios({\r\n            method: 'GET',\r\n            url: `http://localhost:1337/celest-bodies/${this.props.ship.celest_body.id}`\r\n        })\r\n        const fetchedCelestBody = celestBodyRes.data\r\n        console.log('fetchedCelestBody', fetchedCelestBody);\r\n    } catch(e){\r\n        alert(e)\r\n    }*/\n  }\n\n  render() {\n    if (this.context.state.ship.locationStatus === 'orbit') {\n      return /*#__PURE__*/React.createElement(ShipContext.Provider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 24\n        }\n      }, /*#__PURE__*/React.createElement(FromOrbit, {\n        fromOrbitToSurface: this.fromOrbitToSurface,\n        escapeFromOrbit: this.escapeFromOrbit,\n        childTransfer: this.childTransfer,\n        landShip: this.landShip,\n        commandModuleReEntry: this.commandModuleReEntry,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 25\n        }\n      }));\n    } else if (this.context.state.ship.locationStatus === 'ground') {\n      return /*#__PURE__*/React.createElement(ShipContext.Provider, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 24\n        }\n      }, /*#__PURE__*/React.createElement(FromSurface, {\n        fromSurfaceToOrbit: this.fromSurfaceToOrbit,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 25\n        }\n      }));\n    } else {\n      return '';\n    }\n  }\n\n}\nManoeuvreControl.contextType = ShipContext;","map":{"version":3,"sources":["C:/Users/doubl/Documents/Projets/Try/rocketbuilder/frontend/src/components/controls/ManoeuvreControl.js"],"names":["React","Component","ShipContext","updateShip","FromSurface","FromOrbit","ManoeuvreControl","fromSurfaceToOrbit","stage","context","state","requierdDV","Math","sqrt","ship","celest_body","mu","radius","atmosphere","dvByStageAfterBurn","deltaVByStage","dvbystage","dif","console","log","i","length","splice","push","tank","remainingFuel","shipSetStage","updateLocation","name","id","fromOrbitToSurface","escapeFromOrbit","childTransfer","landShip","commandModuleReEntry","componentDidMount","render","locationStatus","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { ShipContext } from '../../contexts/ShipProvider'\r\nimport { updateShip } from '../../utils/updateShip'\r\nimport FromSurface from './FromSurface'\r\nimport FromOrbit from './FromOrbit'\r\n\r\nexport default class ManoeuvreControl extends Component {\r\n\r\n    async componentDidMount() {\r\n        /*try {\r\n            const celestBodyRes = await axios({\r\n                method: 'GET',\r\n                url: `http://localhost:1337/celest-bodies/${this.props.ship.celest_body.id}`\r\n            })\r\n            const fetchedCelestBody = celestBodyRes.data\r\n            console.log('fetchedCelestBody', fetchedCelestBody);\r\n        } catch(e){\r\n            alert(e)\r\n        }*/\r\n    }\r\n\r\n    fromSurfaceToOrbit = () => {\r\n        let stage = this.context.state.stage\r\n        let requierdDV = Math.sqrt(this.context.state.ship.celest_body.mu / this.context.state.ship.celest_body.radius) * 1000 * this.context.state.ship.celest_body.atmosphere\r\n        let dvByStageAfterBurn = [...this.context.state.deltaVByStage]\r\n        let dvbystage = [...this.context.state.deltaVByStage]\r\n        let dif = []\r\n        console.log('reqDV', requierdDV);\r\n        // Minus deltaV\r\n        for (let i = 0; i < dvByStageAfterBurn.length; i++) {\r\n            if (dvByStageAfterBurn[i] > requierdDV) {\r\n                dvByStageAfterBurn[i] -= requierdDV\r\n                requierdDV = 0\r\n                console.log('Congratulation, you reach orbit')\r\n            } else {\r\n                requierdDV -= dvByStageAfterBurn[i]\r\n                dvByStageAfterBurn[i] = 0\r\n            }\r\n        }\r\n        if (requierdDV !== 0) {\r\n            console.log('you failed')\r\n            return\r\n        }\r\n        console.log('dvbystage', dvbystage);\r\n        console.log('dvByStageAfterBurn', dvByStageAfterBurn);\r\n        // stage separation\r\n        for (let i = 0; i < dvByStageAfterBurn.length; i++) {\r\n            if (dvByStageAfterBurn[i] === 0) {\r\n                stage.splice(0, 1)\r\n                dvByStageAfterBurn.splice(0, 1)\r\n                dvbystage.splice(0, 1)\r\n            }\r\n        }\r\n        // getDv % diference\r\n        for (let i = 0; i < dvbystage.length; i++) {\r\n            dif.push(dvByStageAfterBurn[i] / (dvbystage[i] / 100))\r\n        }\r\n        console.log('dif', dif);\r\n        // updateFuelLastStage\r\n        for (let i = 0; i < stage[0].tank.length; i++) {\r\n            stage[0].tank[i].remainingFuel = Math.sqrt(stage[0].tank[i].remainingFuel / 100 * dif[0]) * 100\r\n        }\r\n        //stage update\r\n        this.context.shipSetStage(stage)\r\n        this.context.updateLocation('orbit')\r\n        updateShip(stage, this.context.state.ship.name, 'orbit', this.context.state.ship.celest_body.id, this.context.state.ship.id)\r\n        console.log('manoeuvre context ', this.context);\r\n    }\r\n\r\n    fromOrbitToSurface = () => {\r\n\r\n    }\r\n\r\n    escapeFromOrbit = () => {\r\n\r\n    }\r\n\r\n    childTransfer = () => {\r\n\r\n    }\r\n\r\n    landShip = () => {\r\n        let stage = this.context.state.stage\r\n        let requierdDV = Math.sqrt(this.context.state.ship.celest_body.mu / this.context.state.ship.celest_body.radius) * 1000 / this.context.state.ship.celest_body.atmosphere\r\n        let dvByStageAfterBurn = [...this.context.state.deltaVByStage]\r\n        let dvbystage = [...this.context.state.deltaVByStage]\r\n        let dif = []\r\n        console.log('reqDV', requierdDV);\r\n        // Minus deltaV\r\n        for (let i = 0; i < dvByStageAfterBurn.length; i++) {\r\n            if (dvByStageAfterBurn[i] > requierdDV) {\r\n                dvByStageAfterBurn[i] -= requierdDV\r\n                requierdDV = 0\r\n                console.log('congratulation, you landed')\r\n            } else {\r\n                requierdDV -= dvByStageAfterBurn[i]\r\n                dvByStageAfterBurn[i] = 0\r\n            }\r\n        }\r\n        if (requierdDV !== 0) {\r\n            console.log('you failed')\r\n            return\r\n        }\r\n        console.log('dvbystage', dvbystage);\r\n        console.log('dvByStageAfterBurn', dvByStageAfterBurn);\r\n        // stage separation\r\n        for (let i = 0; i < dvByStageAfterBurn.length; i++) {\r\n            if (dvByStageAfterBurn[i] === 0) {\r\n                stage.splice(0, 1)\r\n                dvByStageAfterBurn.splice(0, 1)\r\n                dvbystage.splice(0, 1)\r\n            }\r\n        }\r\n        // getDv % diference\r\n        for (let i = 0; i < dvbystage.length; i++) {\r\n            dif.push(dvByStageAfterBurn[i] / (dvbystage[i] / 100))\r\n        }\r\n        console.log('dif', dif);\r\n        // updateFuelLastStage\r\n        for (let i = 0; i < stage[0].tank.length; i++) {\r\n            stage[0].tank[i].remainingFuel = (stage[0].tank[i].remainingFuel / 100 * dif[0]) / 1.5\r\n        }\r\n        //stage update\r\n        this.context.shipSetStage(stage)\r\n        this.context.updateLocation('ground')\r\n        updateShip(stage, this.context.state.ship.name, 'ground', this.context.state.ship.celest_body.id, this.context.state.ship.id)\r\n        console.log('manoeuvre context ', this.context);\r\n    }\r\n\r\n    commandModuleReEntry = () => {\r\n\r\n    }\r\n\r\n    render() {\r\n            if (this.context.state.ship.locationStatus === 'orbit') {\r\n                return <ShipContext.Provider>\r\n                        <FromOrbit\r\n                            fromOrbitToSurface={this.fromOrbitToSurface}\r\n                            escapeFromOrbit={this.escapeFromOrbit}\r\n                            childTransfer={this.childTransfer}\r\n                            landShip={this.landShip}\r\n                            commandModuleReEntry={this.commandModuleReEntry}\r\n                        />\r\n                    </ShipContext.Provider>\r\n            } else if (this.context.state.ship.locationStatus === 'ground') {\r\n                return <ShipContext.Provider>\r\n                        <FromSurface\r\n                            fromSurfaceToOrbit={this.fromSurfaceToOrbit}\r\n                        />\r\n                     </ShipContext.Provider>\r\n                \r\n            }else {\r\n                return ''\r\n            }\r\n    }\r\n}\r\n\r\nManoeuvreControl.contextType = ShipContext;\r\n"]},"metadata":{},"sourceType":"module"}