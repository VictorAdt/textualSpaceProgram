{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\doubl\\\\Documents\\\\Projets\\\\Try\\\\rocketbuilder\\\\frontend\\\\src\\\\components\\\\controls\\\\ManoeuvreControl.js\";\nimport React from 'react';\nimport { updateShip } from '../../utils/updateShip';\n\nconst ManoeuvreControl = props => {\n  const fromSurfaceToOrbit = () => {\n    let stage = props.context.stage;\n    let requierdDV = Math.sqrt(props.ship.celest_body.mu / props.ship.celest_body.radius) * 1000 * props.ship.celest_body.atmosphere;\n    let dvByStageAfterBurn = [...props.context.state.deltaVByStage];\n    let dvbystage = [...props.context.state.deltaVByStage];\n    let dif = [];\n    console.log('reqDV', requierdDV); // Minus deltaV\n\n    for (let i = 0; i < dvByStageAfterBurn.length; i++) {\n      if (dvByStageAfterBurn[i] > requierdDV) {\n        dvByStageAfterBurn[i] -= requierdDV;\n        requierdDV = 0;\n        console.log('Congratulation, you reach orbit');\n      } else {\n        requierdDV -= dvByStageAfterBurn[i];\n        dvByStageAfterBurn[i] = 0;\n      }\n    }\n\n    if (requierdDV !== 0) {\n      console.log('you failed');\n      return;\n    }\n\n    console.log('dvbystage', dvbystage);\n    console.log('dvByStageAfterBurn', dvByStageAfterBurn); // stage separation\n\n    for (let i = 0; i < dvByStageAfterBurn.length; i++) {\n      if (dvByStageAfterBurn[i] === 0) {\n        stage.splice(0, 1);\n        dvByStageAfterBurn.splice(0, 1);\n        dvbystage.splice(0, 1);\n      }\n    } // getDv % diference\n\n\n    for (let i = 0; i < dvbystage.length; i++) {\n      dif.push(dvByStageAfterBurn[i] / (dvbystage[i] / 100));\n    }\n\n    console.log('dif', dif); // updateFuelLastStage\n\n    for (let i = 0; i < stage[0].tank.length; i++) {\n      stage[0].tank[i].remainingFuel = stage[0].tank[i].remainingFuel / 100 * dif[0] / 1.5;\n    } //stage update\n\n\n    this.context.shipSetStage(stage);\n    this.context.updateLocation('orbit');\n    updateShip(stage, props.ship.name, 'orbit', props.ship.celest_body.id, props.ship.id);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"manoeuvre__Control\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => fromSurfaceToOrbit(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"go to orbit :\"));\n};\n\nexport default ManoeuvreControl;","map":{"version":3,"sources":["C:/Users/doubl/Documents/Projets/Try/rocketbuilder/frontend/src/components/controls/ManoeuvreControl.js"],"names":["React","updateShip","ManoeuvreControl","props","fromSurfaceToOrbit","stage","context","requierdDV","Math","sqrt","ship","celest_body","mu","radius","atmosphere","dvByStageAfterBurn","state","deltaVByStage","dvbystage","dif","console","log","i","length","splice","push","tank","remainingFuel","shipSetStage","updateLocation","name","id"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport {updateShip} from '../../utils/updateShip'\r\n\r\nconst ManoeuvreControl = props => {\r\n\r\n    const fromSurfaceToOrbit = () => {\r\n        let stage = props.context.stage\r\n        let requierdDV = Math.sqrt(props.ship.celest_body.mu / props.ship.celest_body.radius) * 1000 * props.ship.celest_body.atmosphere\r\n        let dvByStageAfterBurn = [...props.context.state.deltaVByStage]\r\n        let dvbystage = [...props.context.state.deltaVByStage]\r\n        let dif = []\r\n        console.log('reqDV', requierdDV);\r\n        // Minus deltaV\r\n        for (let i = 0; i < dvByStageAfterBurn.length; i++) {\r\n            if (dvByStageAfterBurn[i] > requierdDV) {\r\n                dvByStageAfterBurn[i] -= requierdDV\r\n                requierdDV = 0\r\n                console.log('Congratulation, you reach orbit')\r\n            } else {\r\n                requierdDV -= dvByStageAfterBurn[i]\r\n                dvByStageAfterBurn[i] = 0\r\n            }\r\n        }\r\n        if (requierdDV !== 0) {\r\n            console.log('you failed')\r\n            return\r\n        }\r\n        console.log('dvbystage', dvbystage);\r\n        console.log('dvByStageAfterBurn', dvByStageAfterBurn);\r\n        // stage separation\r\n        for (let i = 0; i < dvByStageAfterBurn.length; i++) {\r\n            if (dvByStageAfterBurn[i] === 0) {\r\n                stage.splice(0, 1)\r\n                dvByStageAfterBurn.splice(0, 1)\r\n                dvbystage.splice(0, 1)\r\n            }\r\n        }\r\n        // getDv % diference\r\n        for (let i = 0; i < dvbystage.length; i++) {\r\n            dif.push(dvByStageAfterBurn[i] / (dvbystage[i] / 100))\r\n        }\r\n        console.log('dif', dif);\r\n        // updateFuelLastStage\r\n        for (let i = 0; i < stage[0].tank.length; i++) {\r\n            stage[0].tank[i].remainingFuel = (stage[0].tank[i].remainingFuel / 100 * dif[0]) / 1.5\r\n        }\r\n        //stage update\r\n            this.context.shipSetStage(stage)\r\n            this.context.updateLocation('orbit')\r\n            updateShip(stage, props.ship.name , 'orbit' ,props.ship.celest_body.id, props.ship.id)\r\n    }\r\n\r\n    \r\n    return (\r\n        <div className=\"manoeuvre__Control\">\r\n            <button onClick={() => fromSurfaceToOrbit()}>go to orbit :</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ManoeuvreControl;"]},"metadata":{},"sourceType":"module"}